@page "/VoteResults"
@using BusinessDirectory.DB.Models;
@using BusinessDirectory.Client.Services;
@inject IVoting votingService
@inject IUser userService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<PageTitle>Vote Results</PageTitle>

<h3>Vote Results</h3>
<MudTable Items="@response.Take(10)" Hover="true">
    <HeaderContent>
        <MudTh>Candidate Name</MudTh>
        <MudTh>Number Of Votes</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Candidate Name">
            <MudNavLink Href="@($"candidatedetailspage/{context.UserID}")"> @context.User.FirstName </MudNavLink>
         </MudTd>
        <MudTd DataLabel="Place">@context.User.numberOfVotes</MudTd>
    </RowTemplate>
</MudTable>




@code {

    User user = new User();
    //List<User> users = new List<User>();
    public int UserId;
    List<Roles> response = new List<Roles>();
    VoteModel model = new VoteModel();
    protected  override async Task OnInitializedAsync()
    {
        AuthenticationState ac = await AuthStateProvider.GetAuthenticationStateAsync();
        UserId = Int32.Parse(ac.User.Claims.First(i => i.Type == System.Security.Claims.ClaimTypes.NameIdentifier).Value);

        response = await votingService.GetRolesByRole(2);
    }
}